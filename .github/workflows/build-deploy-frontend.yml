name: Build and deploy frontend to SKIP
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths-ignore:
      - backend**
      - .sikkerhet**
      - compose.yaml
      - README**
  push:
    paths-ignore:
      - backend**
      - .sikkerhet**
      - compose.yaml
      - README**
    branches:
      - main

env:
  REGISTRY: ghcr.io
  ARGO_VERSION_FILE: image-url-regelrett-frontend
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build:
    name: Docker build and push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    outputs:
      image_url: ${{ steps.setOutput.outputs.image_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 22.x
          cache: "npm"
          cache-dependency-path: "./frontend/beCompliant/package-lock.json"
          registry-url: "https://npm.pkg.github.com"

      - name: Run npm install and build
        working-directory: frontend/beCompliant
        run: |
          npm ci
          npm run build
      - name: Login to Github Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b # v6.2
        with:
          github_token: ${{ github.token }}

      - name: Build Docker and push
        id: build
        uses: docker/build-push-action@f6010ea70151369b06f0194be1051fbbdff851b2 # v6.0.2
        with:
          context: ./frontend/beCompliant
          file: frontend/beCompliant/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }},${{ env.registry }}/${{ env.IMAGE_NAME }}:latest

      - name: Set output with build values
        id: setOutput
        run: |
          echo "image_url=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT
  pharos:
    name: Run Pharos with Required Permissions
    needs: build
    permissions:
      actions: read
      packages: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: "Run Pharos"
        uses: kartverket/pharos@9ba014f232304231c670808ecaca97415d88c830 # v0.2.1
        with:
          image_url: ${{ needs.build.outputs.image_url }}

  deploy:
    name: Update version in apps-repo
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout apps-repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: kartverket/skvis-apps
          ref: main
          token: ${{ secrets.ARGO_PAT }}
      - name: Update version
        run: |
          echo "\"${{ needs.build.outputs.image_url }}\"" > "env/atgcp1-dev/regelrett-main/${{ env.ARGO_VERSION_FILE }}"
          git config --global user.email "noreply@kartverket.no"
          git config --global user.name "Regelrett CI"
          git commit -am "Update Regelrett frontend ${{ env.ARGO_VERSION_FILE }}"
          git push